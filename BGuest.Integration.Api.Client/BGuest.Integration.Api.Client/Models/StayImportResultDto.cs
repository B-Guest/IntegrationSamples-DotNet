// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Linq;
using Newtonsoft.Json.Linq;

namespace BGuest.Integration.Api.Client.Models
{
    public partial class StayImportResultDto
    {
        private string _externalKey;
        
        /// <summary>
        /// Required. External key as provided on the import structure
        /// </summary>
        public string ExternalKey
        {
            get { return this._externalKey; }
            set { this._externalKey = value; }
        }
        
        private string _guestEmail;
        
        /// <summary>
        /// Required. Guest email as provided on the import structure
        /// </summary>
        public string GuestEmail
        {
            get { return this._guestEmail; }
            set { this._guestEmail = value; }
        }
        
        private string _id;
        
        /// <summary>
        /// Required. BGuest ID for the stay
        /// </summary>
        public string ID
        {
            get { return this._id; }
            set { this._id = value; }
        }
        
        private string _message;
        
        /// <summary>
        /// Optional. Error message for failed importations
        /// </summary>
        public string Message
        {
            get { return this._message; }
            set { this._message = value; }
        }
        
        private bool? _success;
        
        /// <summary>
        /// Optional. Boolean that states if importation was successful
        /// </summary>
        public bool? Success
        {
            get { return this._success; }
            set { this._success = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the StayImportResultDto class.
        /// </summary>
        public StayImportResultDto()
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the StayImportResultDto class with
        /// required arguments.
        /// </summary>
        public StayImportResultDto(string id, string guestEmail, string externalKey)
            : this()
        {
            if (id == null)
            {
                throw new ArgumentNullException("id");
            }
            if (guestEmail == null)
            {
                throw new ArgumentNullException("guestEmail");
            }
            if (externalKey == null)
            {
                throw new ArgumentNullException("externalKey");
            }
            this.ID = id;
            this.GuestEmail = guestEmail;
            this.ExternalKey = externalKey;
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken externalKeyValue = inputObject["externalKey"];
                if (externalKeyValue != null && externalKeyValue.Type != JTokenType.Null)
                {
                    this.ExternalKey = ((string)externalKeyValue);
                }
                JToken guestEmailValue = inputObject["guestEmail"];
                if (guestEmailValue != null && guestEmailValue.Type != JTokenType.Null)
                {
                    this.GuestEmail = ((string)guestEmailValue);
                }
                JToken idValue = inputObject["id"];
                if (idValue != null && idValue.Type != JTokenType.Null)
                {
                    this.ID = ((string)idValue);
                }
                JToken messageValue = inputObject["message"];
                if (messageValue != null && messageValue.Type != JTokenType.Null)
                {
                    this.Message = ((string)messageValue);
                }
                JToken successValue = inputObject["success"];
                if (successValue != null && successValue.Type != JTokenType.Null)
                {
                    this.Success = ((bool)successValue);
                }
            }
        }
    }
}
