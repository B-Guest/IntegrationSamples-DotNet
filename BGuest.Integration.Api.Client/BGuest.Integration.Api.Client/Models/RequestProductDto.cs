// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System.Collections.Generic;
using Newtonsoft.Json.Linq;

namespace BGuest.Integration.Api.Client.Models
{
    public partial class RequestProductDto
    {
        private string _externalKey;
        
        /// <summary>
        /// Optional. External key that maps a product to external systems.
        /// </summary>
        public string ExternalKey
        {
            get { return this._externalKey; }
            set { this._externalKey = value; }
        }
        
        private string _guestComments;
        
        /// <summary>
        /// Optional. Comments from Guest related to this product
        /// </summary>
        public string GuestComments
        {
            get { return this._guestComments; }
            set { this._guestComments = value; }
        }
        
        private int? _id;
        
        /// <summary>
        /// Optional. RequestProduct Id
        /// </summary>
        public int? ID
        {
            get { return this._id; }
            set { this._id = value; }
        }
        
        private bool? _isBreakfast;
        
        /// <summary>
        /// Optional. flag that determines if the product is breakfast
        /// </summary>
        public bool? IsBreakfast
        {
            get { return this._isBreakfast; }
            set { this._isBreakfast = value; }
        }
        
        private string _name;
        
        /// <summary>
        /// Optional. RequestProduct Name
        /// </summary>
        public string Name
        {
            get { return this._name; }
            set { this._name = value; }
        }
        
        private double? _price;
        
        /// <summary>
        /// Optional. Price of item
        /// </summary>
        public double? Price
        {
            get { return this._price; }
            set { this._price = value; }
        }
        
        private int? _productId;
        
        /// <summary>
        /// Optional. ProductId of RequestProduct
        /// </summary>
        public int? ProductId
        {
            get { return this._productId; }
            set { this._productId = value; }
        }
        
        private IList<RequestProductOptionDto> _productOptions;
        
        /// <summary>
        /// Optional. Options that compose the Product
        /// </summary>
        public IList<RequestProductOptionDto> ProductOptions
        {
            get { return this._productOptions; }
            set { this._productOptions = value; }
        }
        
        private int? _quantity;
        
        /// <summary>
        /// Optional. Quantity of item
        /// </summary>
        public int? Quantity
        {
            get { return this._quantity; }
            set { this._quantity = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the RequestProductDto class.
        /// </summary>
        public RequestProductDto()
        {
            this.ProductOptions = new List<RequestProductOptionDto>();
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken externalKeyValue = inputObject["externalKey"];
                if (externalKeyValue != null && externalKeyValue.Type != JTokenType.Null)
                {
                    this.ExternalKey = ((string)externalKeyValue);
                }
                JToken guestCommentsValue = inputObject["guestComments"];
                if (guestCommentsValue != null && guestCommentsValue.Type != JTokenType.Null)
                {
                    this.GuestComments = ((string)guestCommentsValue);
                }
                JToken idValue = inputObject["id"];
                if (idValue != null && idValue.Type != JTokenType.Null)
                {
                    this.ID = ((int)idValue);
                }
                JToken isBreakfastValue = inputObject["isBreakfast"];
                if (isBreakfastValue != null && isBreakfastValue.Type != JTokenType.Null)
                {
                    this.IsBreakfast = ((bool)isBreakfastValue);
                }
                JToken nameValue = inputObject["name"];
                if (nameValue != null && nameValue.Type != JTokenType.Null)
                {
                    this.Name = ((string)nameValue);
                }
                JToken priceValue = inputObject["price"];
                if (priceValue != null && priceValue.Type != JTokenType.Null)
                {
                    this.Price = ((double)priceValue);
                }
                JToken productIdValue = inputObject["productId"];
                if (productIdValue != null && productIdValue.Type != JTokenType.Null)
                {
                    this.ProductId = ((int)productIdValue);
                }
                JToken productOptionsSequence = ((JToken)inputObject["productOptions"]);
                if (productOptionsSequence != null && productOptionsSequence.Type != JTokenType.Null)
                {
                    foreach (JToken productOptionsValue in ((JArray)productOptionsSequence))
                    {
                        RequestProductOptionDto requestProductOptionDto = new RequestProductOptionDto();
                        requestProductOptionDto.DeserializeJson(productOptionsValue);
                        this.ProductOptions.Add(requestProductOptionDto);
                    }
                }
                JToken quantityValue = inputObject["quantity"];
                if (quantityValue != null && quantityValue.Type != JTokenType.Null)
                {
                    this.Quantity = ((int)quantityValue);
                }
            }
        }
    }
}
