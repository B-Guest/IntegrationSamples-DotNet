// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System.Collections.Generic;
using Newtonsoft.Json.Linq;

namespace BGuest.Integration.Api.Client.Models
{
    public partial class RequestCategoryDto
    {
        private int? _categoryId;
        
        /// <summary>
        /// Optional. CategoryId of RequestCategory
        /// </summary>
        public int? CategoryId
        {
            get { return this._categoryId; }
            set { this._categoryId = value; }
        }
        
        private int? _id;
        
        /// <summary>
        /// Optional. RequestCategory Id
        /// </summary>
        public int? ID
        {
            get { return this._id; }
            set { this._id = value; }
        }
        
        private string _name;
        
        /// <summary>
        /// Optional. RequestCateogry Name
        /// </summary>
        public string Name
        {
            get { return this._name; }
            set { this._name = value; }
        }
        
        private IList<RequestProductDto> _products;
        
        /// <summary>
        /// Optional. List of Products contained in RequestCategory
        /// </summary>
        public IList<RequestProductDto> Products
        {
            get { return this._products; }
            set { this._products = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the RequestCategoryDto class.
        /// </summary>
        public RequestCategoryDto()
        {
            this.Products = new List<RequestProductDto>();
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken categoryIdValue = inputObject["categoryId"];
                if (categoryIdValue != null && categoryIdValue.Type != JTokenType.Null)
                {
                    this.CategoryId = ((int)categoryIdValue);
                }
                JToken idValue = inputObject["id"];
                if (idValue != null && idValue.Type != JTokenType.Null)
                {
                    this.ID = ((int)idValue);
                }
                JToken nameValue = inputObject["name"];
                if (nameValue != null && nameValue.Type != JTokenType.Null)
                {
                    this.Name = ((string)nameValue);
                }
                JToken productsSequence = ((JToken)inputObject["products"]);
                if (productsSequence != null && productsSequence.Type != JTokenType.Null)
                {
                    foreach (JToken productsValue in ((JArray)productsSequence))
                    {
                        RequestProductDto requestProductDto = new RequestProductDto();
                        requestProductDto.DeserializeJson(productsValue);
                        this.Products.Add(requestProductDto);
                    }
                }
            }
        }
    }
}
